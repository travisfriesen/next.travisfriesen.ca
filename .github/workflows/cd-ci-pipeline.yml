name: CI/CD Pipeline

permissions:
  contents: read
  packages: write
  id-token: write

on:
  push:
    branches:
      - main
      - release
  pull_request:
    branches:
      - release
  workflow_dispatch:

env:
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  set-port:
    runs-on: ubuntu-latest
    outputs:
      PORT: ${{ steps.set-port.outputs.PORT }}
      ENVIRONMENT: ${{ steps.set-port.outputs.ENVIRONMENT }}
      ENV_URL: ${{ steps.set-port.outputs.ENV_URL }}
      IMAGE_NAME: ${{ steps.set-port.outputs.IMAGE_NAME }}
    steps:
      - name: Set port based on branch
        id: set-port
        run: |
          if [[ "${GITHUB_REF##*/}" == "release" ]]; then
            echo "PORT=80" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=zeus-production" >> $GITHUB_OUTPUT
            echo "ENV_URL=https://travisfriesen.ca" >> $GITHUB_OUTPUT
            echo "IMAGE_NAME=tf.ca-zeus-production" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" && "${{ github.base_ref }}" == "release" ]]; then
            echo "PORT=4000" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=zeus-staging" >> $GITHUB_OUTPUT
            echo "ENV_URL=https://staging.travisfriesen.travisf.ca" >> $GITHUB_OUTPUT
            echo "IMAGE_NAME=tf.ca-zeus-staging" >> $GITHUB_OUTPUT
          else
            echo "PORT=3000" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=zeus-preview" >> $GITHUB_OUTPUT
            echo "ENV_URL=https://preview.travisfriesen.travisf.ca" >> $GITHUB_OUTPUT
            echo "IMAGE_NAME=tf.ca-zeus-preview" >> $GITHUB_OUTPUT
          fi
      - name: Debug outputs
        run: |
          echo "PORT: ${{ steps.set-port.outputs.PORT }}"
          echo "ENVIRONMENT: ${{ steps.set-port.outputs.ENVIRONMENT }}"
          echo "ENV_URL: ${{ steps.set-port.outputs.ENV_URL }}"
          echo "IMAGE_NAME: ${{ steps.set-port.outputs.IMAGE_NAME }}"

  build:
    runs-on: ubuntu-latest
    needs: set-port
    steps:
      - name: Build Container
        uses: travisfriesen/workflows/build_and_upload_docker_container@main
        with:
          IMAGE_NAME: ${{ needs.set-port.outputs.IMAGE_NAME }}

  deploy:
    runs-on: self-hosted
    needs: [set-port, build]
    environment:
      name: ${{ needs.set-port.outputs.ENVIRONMENT }}
      url: ${{ needs.set-port.outputs.ENV_URL }}
    steps:
      - name: Deploy using Ansible Playbook
        uses: travisfriesen/workflows/download_docker_container_and_run_ansible_playbook@main
        with:
          ENVIRONMENT: ${{ needs.set-port.outputs.ENVIRONMENT }}
          EXTRA_VARS: "port=${{ needs.set-port.outputs.PORT }} container_name=tfca_container-${{ needs.set-port.outputs.ENVIRONMENT }} image_name=${{ needs.set-port.outputs.IMAGE_NAME }}:${{ github.run_number }}-${{ github.run_attempt }} artifact_path=/tmp/${{ needs.set-port.outputs.ENVIRONMENT }}/${{ needs.set-port.outputs.IMAGE_NAME }}.tar"
          ARTIFACT_NAME: ${{ needs.set-port.outputs.IMAGE_NAME }}
          USER: "ubuntu"
          PLAYBOOK_PATH: ".ansible/playbook/ansible_deploy_container.yml"
          HOST: "localhost"
