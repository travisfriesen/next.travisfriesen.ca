name: CI/CD Pipeline

permissions:
  contents: read
  packages: write
  id-token: write

on:
  push:
    branches:
      - main
      - release
  workflow_dispatch:

env:
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  check-commit-message:
    runs-on: ubuntu-latest
    outputs:
      skip-build: ${{ steps.check.outputs.skip-build }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Check if build should be skipped
        id: check
        run: |
          if git log -1 --pretty=%B | grep -q '\[skip build\]'; then
            echo "skip-build=true" >> $GITHUB_OUTPUT
          else
            echo "skip-build=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-commit-message
    if: ${{ needs.check-commit-message.outputs.skip-build != 'true' }}
    uses: ./.github/workflows/build_container.yml
    secrets: inherit
    with:
      IMAGE_NAME: ${{ github.repository }}

  set-port:
    runs-on: ubuntu-latest
    needs: [ check-commit-message, build ]
    if: ${{ always() }}
    outputs:
      PORT: ${{ steps.set-port.outputs.PORT }}
      ENVIRONMENT: ${{ steps.set-port.outputs.ENVIRONMENT }}
      ENV_URL: ${{ steps.set-port.outputs.ENV_URL }}
    steps:
      - name: Set port based on branch
        id: set-port
        run: |
          if [[ "${GITHUB_REF##*/}" == "release" ]]; then
            echo "PORT=80" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=zeus-production" >> $GITHUB_OUTPUT
            echo "ENV_URL=https://travisfriesen.ca" >> $GITHUB_OUTPUT
          else
            echo "PORT=3000" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=zeus-preview" >> $GITHUB_OUTPUT
            echo "ENV_URL=https://travisfriesen.ca" >> $GITHUB_OUTPUT
          fi
      - name: Debug outputs
        run: |
          echo "PORT: ${{ steps.set-port.outputs.PORT }}"
          echo "ENVIRONMENT: ${{ steps.set-port.outputs.ENVIRONMENT }}"
          echo "ENV_URL: ${{ steps.set-port.outputs.ENV_URL }}"

  debug-before-deploy:
    runs-on: ubuntu-latest
    needs: set-port
    if: ${{ always() && needs.set-port.result != 'failure' }}
    steps:
      - name: Debug values before deploy
        run: |
          echo "set-port job status: ${{ needs.set-port.result }}"
          echo "PORT from set-port: ${{ needs.set-port.outputs.PORT }}"
          echo "ENVIRONMENT from set-port: ${{ needs.set-port.outputs.ENVIRONMENT }}"
          echo "ENV_URL from set-port: ${{ needs.set-port.outputs.ENV_URL }}"

  deploy:
    needs: [set-port, debug-before-deploy]
    if: ${{ always() && needs.set-port.result != 'failure' }}
    uses: ./.github/workflows/deploy_to_oracle_cloud.yml
    with:
      PORT: ${{ needs.set-port.outputs.PORT }}
      ENVIRONMENT: ${{ needs.set-port.outputs.ENVIRONMENT }}
      ENV_URL: ${{ needs.set-port.outputs.ENV_URL }}